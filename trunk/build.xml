<?xml version="1.0"?>

<!--
/*
 * $RCSfile$
 *
 * Copyright (c) 2006 Sun Microsystems, Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * - Redistribution of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 *
 * - Redistribution in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in
 *   the documentation and/or other materials provided with the
 *   distribution.
 *
 * Neither the name of Sun Microsystems, Inc. or the names of
 * contributors may be used to endorse or promote products derived
 * from this software without specific prior written permission.
 *
 * This software is provided "AS IS," without a warranty of any
 * kind. ALL EXPRESS OR IMPLIED CONDITIONS, REPRESENTATIONS AND
 * WARRANTIES, INCLUDING ANY IMPLIED WARRANTY OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT, ARE HEREBY
 * EXCLUDED. SUN MICROSYSTEMS, INC. ("SUN") AND ITS LICENSORS SHALL
 * NOT BE LIABLE FOR ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF
 * USING, MODIFYING OR DISTRIBUTING THIS SOFTWARE OR ITS
 * DERIVATIVES. IN NO EVENT WILL SUN OR ITS LICENSORS BE LIABLE FOR
 * ANY LOST REVENUE, PROFIT OR DATA, OR FOR DIRECT, INDIRECT, SPECIAL,
 * CONSEQUENTIAL, INCIDENTAL OR PUNITIVE DAMAGES, HOWEVER CAUSED AND
 * REGARDLESS OF THE THEORY OF LIABILITY, ARISING OUT OF THE USE OF OR
 * INABILITY TO USE THIS SOFTWARE, EVEN IF SUN HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES.
 *
 * You acknowledge that this software is not designed, licensed or
 * intended for use in the design, construction, operation or
 * maintenance of any nuclear facility.
 *
 * $Revision$
 * $Date$
 * $State$
 */
 -->

<project name="j3d-examples-1.4.0" default="jar">

  <target name="init">
    <!-- Set global properties for this build -->
    <property name="src"        location="src"/>
    <property name="build"      location="build"/>
    <property name="dist"       location="dist"/>
    <property name="output.jar" location="dist/j3d-examples.jar"/>
    <property name="output.zip" location="dist/j3d-examples-src.zip"/>
  </target>

  <target name="compile" depends="init">
    <!-- Create the build directory -->
    <mkdir dir="${build}/classes"/>

    <!-- Compile the java code from ${src}/classes into ${build}/classes -->
    <javac srcdir="${src}/classes"
           destdir="${build}/classes"
	   source="1.4"
	   target="1.4"
	   debug="true"
           deprecation="off">
    </javac>

    <!-- Copy resources to build in preparation for jarring -->
    <copy todir="${build}/classes/org/jdesktop/j3d/examples/resources">
        <fileset dir="${src}/resources"/>
    </copy>
    
    <!-- Copy all non class files from src to build -->   
    <copy todir="${build}/classes/org/jdesktop/j3d/examples">
        <fileset dir="${src}/classes/org/jdesktop/j3d/examples" includes ="**/*.vert **/*.frag **/*.cg **/*.cfg **/*.html"/>
    </copy>
    
  </target>

  <target name="jar" depends="init,compile">
    <!-- Create the dist directory -->
    <mkdir dir="${dist}"/>
    
    <!-- Create the jar file -->
    <jar jarfile="${output.jar}"
         manifest="manifest.mf"
         update="no"
         compress="false">
	<fileset dir="${build}/classes" includes="org/**/*"/>
    </jar>
  </target>

  <target name="zip" depends="init">
    <mkdir dir="${dist}"/>
    <zip destfile="${output.zip}">
      <fileset dir="." includes="src/**"/>
      <fileset dir="." includes="COPYRIGHT.txt"/>
      <fileset dir="." includes="README*.*"/>
      <fileset dir="." includes="*LICENSE*.*"/>
      <fileset dir="." includes="build.xml"/>
      <fileset dir="." includes="manifest.mf"/>
      <fileset dir="." includes="nbproject/**" excludes="nbproject/private/**"/>
    </zip>
  </target>

  <target name="all" depends="init,jar,zip">
  </target>

  <target name="clean" depends="init">
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>

  <target name="init-run" depends="init,jar">
    <path id="run.classpath">
      <pathelement location="${output.jar}"/>
    </path>
  </target>

  <target name="run" depends="run.HelloUniverse">
  </target>

  <!--
   **************************************************
   * Individual run targets for each example program
   **************************************************
   -->

  <target name="run.AppearanceMixed" depends="init-run">
    <java fork="true"
          classname="org.jdesktop.j3d.examples.appearance.AppearanceMixed">
      <classpath refid="run.classpath"/>
    </java>
  </target>
  
  <target name="run.AppearanceTest" depends="init-run">
    <java fork="true"
          classname="org.jdesktop.j3d.examples.appearance.AppearanceTest">
      <classpath refid="run.classpath"/>
    </java>
  </target>

  <target name="run.Applet3D" depends="init-run">
    <java fork="true"
          classname="org.jdesktop.j3d.examples.applet3d.Applet3D">
      <classpath refid="run.classpath"/>
    </java>
  </target>
  
  <target name="run.BackgroudGeometry" depends="init-run">
    <java fork="true"
          classname="org.jdesktop.j3d.examples.background.BackgroundGeometry">
      <classpath refid="run.classpath"/>
    </java>
  </target>

  <target name="run.ConfigObjLoad" depends="init-run">
    <java fork="true"
          classname="org.jdesktop.j3d.examples.configured_universe.ConfigObjLoad">
      <classpath refid="run.classpath"/>
    </java>
  </target>
  
  <target name="run.DepthFuncTest" depends="init-run">
    <java fork="true"
          classname="org.jdesktop.j3d.examples.depth_func.DepthFuncTest">
      <classpath refid="run.classpath"/>
    </java>
  </target>
  
  <target name="run.DistortGlyphTest" depends="init-run">
    <java fork="true"
          classname="org.jdesktop.j3d.examples.distort_glyph.DistortGlyphTest">
      <classpath refid="run.classpath"/>
    </java>
  </target>

  <target name="run.FourByFour" depends="init-run">
    <java fork="true"
          classname="org.jdesktop.j3d.examples.four_by_four.FourByFour">
      <classpath refid="run.classpath"/>
    </java>
  </target>
    
  <target name="run.HelloUniverse" depends="init-run">
    <java fork="true"
          classname="org.jdesktop.j3d.examples.hello_universe.HelloUniverse">
      <classpath refid="run.classpath"/>
    </java>
  </target>

  <target name="run.Morphing" depends="init-run">
    <java fork="true"
          classname="org.jdesktop.j3d.examples.morphing.Morphing">
      <classpath refid="run.classpath"/>
    </java>
  </target>
    
  <target name="run.MultiTextureTest" depends="init-run">
    <java fork="true"
          classname="org.jdesktop.j3d.examples.texture.MultiTextureTest">
      <classpath refid="run.classpath"/>
    </java>
  </target>
  
  <target name="run.ObjLoad" depends="init-run">
    <java fork="true"
          classname="org.jdesktop.j3d.examples.objload.ObjLoad">
      <classpath refid="run.classpath"/>
    </java>
  </target>

  <target name="run.ObjLoadGLSL" depends="init-run">
    <java fork="true"
          classname="org.jdesktop.j3d.examples.glsl_shader.ObjLoadGLSL">
      <classpath refid="run.classpath"/>
    </java>
  </target>

  <target name="run.EnvironmentMappingGLSL" depends="init-run">
    <java fork="true"
          classname="org.jdesktop.j3d.examples.glsl_shader.EnvironmentMappingGLSL">
      <classpath refid="run.classpath"/>
    </java>
  </target>
  
  <target name="run.SamplerTestGLSL" depends="init-run">
    <java fork="true"
          classname="org.jdesktop.j3d.examples.glsl_shader.SamplerTestGLSL">
      <classpath refid="run.classpath"/>
    </java>
  </target>
  
 <target name="run.PhongShadingGLSL" depends="init-run">
    <java fork="true"
          classname="org.jdesktop.j3d.examples.glsl_shader.PhongShadingGLSL">
      <classpath refid="run.classpath"/>
    </java>
  </target>

  <target name="run.QueryProperties" depends="init-run">
    <java fork="true"
          classname="org.jdesktop.j3d.examples.package_info.QueryProperties">
      <classpath refid="run.classpath"/>
    </java>
  </target>

  <target name="run.ShaderTestGLSL" depends="init-run">
    <java fork="true"
          classname="org.jdesktop.j3d.examples.glsl_shader.ShaderTestGLSL">
      <classpath refid="run.classpath"/>
    </java>
  </target>
  
  <target name="run.SphereMotion" depends="init-run">
    <java fork="true"
          classname="org.jdesktop.j3d.examples.sphere_motion.SphereMotion">
      <classpath refid="run.classpath"/>
    </java>
  </target>

  <target name="run.SphereGLSL" depends="init-run">
    <java fork="true"
          classname="org.jdesktop.j3d.examples.glsl_shader.SphereGLSL">
      <classpath refid="run.classpath"/>
    </java>
  </target>
  
  <target name="run.TextureByReference" depends="init-run">
    <java fork="true"
          classname="org.jdesktop.j3d.examples.texture_by_ref.TextureByReference">
      <classpath refid="run.classpath"/>
    </java>
  </target>
  
  <target name="run.TextureImage" depends="init-run">
    <java fork="true"
          classname="org.jdesktop.j3d.examples.texture.TextureImage">
      <classpath refid="run.classpath"/>
    </java>
  </target>

  <target name="run.TickTockCollision" depends="init-run">
    <java fork="true"
          classname="org.jdesktop.j3d.examples.collision.TickTockCollision">
      <classpath refid="run.classpath"/>
    </java>
  </target>
  
  <target name="run.Viewer" depends="init-run">
    <java fork="true"
          classname="org.jdesktop.j3d.examples.lightwave.Viewer">
      <classpath refid="run.classpath"/>
    </java>
  </target>  
</project>
